# values.yaml – FÜR bitnami/istio-gateway (NICHT istio/gateway!)
# Helm Chart: bitnami/istio-gateway

# ─────────────────────────────────────────────────────────────
# 1. Global & Basis
# ─────────────────────────────────────────────────────────────
global:
  istioNamespace: istio-system

gatewayClassName: istio
replicaCount: 1
revision: ""

# ─────────────────────────────────────────────────────────────
# 2. Autoscaling & PDB
# ─────────────────────────────────────────────────────────────
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPU: 80

pdb:
  create: true
  minAvailable: 1

# ─────────────────────────────────────────────────────────────
# 3. RBAC & ServiceAccount
# ─────────────────────────────────────────────────────────────
rbac:
  create: true

serviceAccount:
  create: true
  name: ingressgateway-sa
  automountServiceAccountToken: false

# ─────────────────────────────────────────────────────────────
# 4. Metrics (Prometheus PodMonitor)
# ─────────────────────────────────────────────────────────────
metrics:
  enabled: true
  podMonitor:
    enabled: true
    port: http-envoy-prom
    path: /stats/prometheus
    namespace: monitoring
    jobLabel: ingressgateway
    interval: 30s

# ─────────────────────────────────────────────────────────────
# 5. Gateways (nur 1, aktiviert)
# ─────────────────────────────────────────────────────────────
gateways:
  - enabled: true
    name: ingressgateway

    # ── Gateway API Listener ───────────────────────────────
    gatewayApi:
      create: true
      listeners:
        - name: https
          protocol: HTTPS
          port: 443
          hostname: "*.philippmhauptmann.me"
          tls:
            mode: Terminate
            certificateRefs:
              - name: wildcard-philippmhauptmann-tls
                kind: Secret
                group: ""
          allowedRoutes:
            namespaces:
              from: Selector
              selector:
                matchExpressions:
                  - key: kubernetes.io/metadata.name
                    operator: In
                    values:
                      - argocd
                      - monitoring

    # ── Service Ports (MUSS ARRAY SEIN!) ───────────────────
    service:
      type: LoadBalancer
      ports:
        - port: 15021
          name: status
          targetPort: 15021
        - port: 80
          name: http2
          targetPort: 80
        - port: 443
          name: https
          targetPort: 443
        - port: 15020
          name: http-prometheus
          targetPort: 15020
      externalTrafficPolicy: Local

    # ── Container Ports ────────────────────────────────────
    containerPorts:
      status: 15021
      http2: 80
      https: 443
      metrics: 15090
      metricsMerge: 15020

    # ── Prometheus Annotations ─────────────────────────────
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "15020"
      prometheus.io/path: "/stats/prometheus"

    # ── Secret mounten (optional, da certificateRefs genutzt) ──
    secretVolumes:
      - name: wildcard-tls
        secretName: wildcard-philippmhauptmann-tls
        mountPath: /etc/istio/wildcard-tls
        readOnly: true

    # ── RBAC & SA pro Gateway ──────────────────────────────
    serviceAccount:
      create: true
      name: ingressgateway-sa
      automountServiceAccountToken: false

    rbac:
      create: true