replicaCount: 1
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

service:
  type: LoadBalancer
  ports:
    - name: status-port
      port: 15021
      targetPort: 15021
      protocol: TCP
    - name: http2
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
    - name: http-prometheus
      port: 15020
      targetPort: 15020
      protocol: TCP

gateway:
  apiVersion: gateway.networking.k8s.io/v1beta1
  kind: Gateway
  metadata:
    name: ingressgateway
    namespace: istio-system
  spec:
    gatewayClassName: istio
    listeners:
      - name: https
        protocol: HTTPS
        port: 443
        hostname: "*.philippmhauptmann.me"
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: wildcard-philippmhauptmann-tls
              namespace: istio-system
        allowedRoutes:
          namespaces:
            from: Selector
            selector:
              matchExpressions:
                - key: kubernetes.io/metadata.name
                  operator: In
                  values:
                    - argocd
                    - monitoring

# Optional: Prometheus Scrape
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "15020"
  prometheus.io/path: "/stats/prometheus"

# Optional: Secret mounten
volumes:
  - name: wildcard-tls
    secret:
      secretName: wildcard-philippmhauptmann-tls
volumeMounts:
  - name: wildcard-tls
    mountPath: /etc/istio/wildcard-tls
    readOnly: true

# Optional: ServiceAccount
serviceAccount:
  create: true
  name: ingressgateway-sa
  automountToken: false

# Optional: Pod Disruption Budget
pdb:
  minAvailable: 1

# Optional: Resources
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi